# Copyright 2018-2021 Cargill Incorporated
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

language: python

services:
  - docker

env:
  global:
    - ISOLATION_ID=$TRAVIS_BUILD_ID
    - NAMESPACE="splintercommunity/"
    - VERSION=AUTO_STRICT
    - BUILD_MODE="--verbose --release"

git:
  depth: false

before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | sudo bash -s -- --to /usr/local/bin
  - pip3 install travis-wait-improved
addons:
  apt:
    packages:
      - docker-ce

jobs:
  include:
    - stage: Lint Gameroom Client
      script:
        - just ci-lint-client

    - stage: Run Lint/Clippy on Splinter
      script:
        - just ci-lint-splinter

    - stage: Run Splinter/Gameroom Unit Tests
      before_script:
        - set -e
      script:
        - travis-wait-improved --timeout 120m just ci-test
    - stage: Run Splinter/Gameroom Unit Tests
      before_script:
        - set -e
      script:
        - just ci-test-gameroom
    - stage: Run Splinter/Gameroom Unit Tests
      before_script:
        - set -e
      script:
        - docker-compose -f examples/gameroom/tests/cypress/docker-compose.yaml up --abort-on-container-exit

    - stage: Publish artifacts
      language: generic
      before_deploy:
        - docker login -u splintercommunity -p $DOCKER_TOKEN
      deploy:
        - provider: script
          script: bash ci/publish-docker main
          on:
            branch: main
        - provider: script
          script: bash ci/publish-docker
          on:
            tags: true
            all_branches: true
        - provider: script
          script: bash ci/publish-crates
          on:
            tags: true
            all_branches: true

notifications:
  slack:
    secure: $SLACK_TOKEN
    on_success: change
    on_failure: always

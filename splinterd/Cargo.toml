# Copyright 2018-2022 Cargill Incorporated
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[package]
name = "splinter-daemon"
version = "0.7.1"
authors = ["Cargill Incorporated"]
edition = "2018"
license = "Apache-2.0"
description = """\
    Splinter is a privacy-focused platform for distributed applications that \
    provides a blockchain-inspired networking environment for communication \
    and transactions between organizations.
"""

[[bin]]
name = "splinterd"
path = "src/main.rs"

[lib]
name = "splinterd"
path = "src/lib.rs"

[dependencies]
bytes = "0.4"
clap = "2.32"
crossbeam-channel = "0.5"
ctrlc = "3.0"
cylinder = { version = "0.2.2", features = ["key-load"] }
diesel = { version = "1.0", features = ["postgres"], optional = true }
log = "0.4"
log4rs = { version = "1", features = ["threshold_filter"] }
openssl = { version = "0.10", optional = true }
protobuf = "2.23"
rand = "0.8"
sawtooth = { version = "0.7", default-features = false, optional = true }
serde = "1.0.80"
serde_derive = "1.0.80"
splinter-echo = { path = "../services/echo/libecho", optional = true }
splinter-rest-api-common = { path = "../rest_api/common" }
toml = "0.5"

[dev-dependencies]
openssl = { version = "0.10" }
reqwest = { version = "0.11", features = ["blocking"] }
sabre-sdk = "0.9"
tempfile = "3"
transact = "0.5"

[dependencies.splinter-rest-api-actix-web-1]
path = "../rest_api/actix_web_1"
features = ["admin-service",
  "registry",
  "service",
  "scabbard-service",
  "rbac",
  "biome-credentials",
  "cylinder-jwt",
  "authorization",
  "websocket"
  ]

[dependencies.scabbard]
path = "../services/scabbard/libscabbard"
features = [
  "lmdb",
  "rest-api-actix-web-1",
  "splinter-service",
]

[dependencies.splinter]
path = "../libsplinter"
features = [
  "admin-service",
  "challenge-authorization",
  "cylinder-jwt",
  "memory",
  "registry",
  "registry-remote",
  "rest-api-actix-web-1",
  "store-factory",
  "node-id-store",
]

[features]
default = [
    "authorization",
    "authorization-handler-allow-keys",
    "authorization-handler-rbac",
    "biome-credentials",
    "biome-key-management",
    "biome-profile",
    "database-postgres",
    "database-sqlite",
    "oauth",
    "tap",
    "trust-authorization",
]

stable = [
    "default",
    "rest-api-cors",
]

experimental = [
    # The experimental feature extends stable:
    "stable",
    # The following features are experimental:
    "authorization-handler-maintenance",
    "disable-scabbard-autocleanup",
    "https-bind",
    "lifecycle-executor-interval",
    "node",
    "scabbardv3",
    "service-endpoint",
    "service-timer-interval",
    "service2",
    "service-echo",
    "ws-transport",
]

authorization = [
    "scabbard/authorization",
    "splinter/authorization",
    "splinter-rest-api-actix-web-1/authorization",
    "splinter-rest-api-common/authorization",
]
authorization-handler-allow-keys = ["splinter/authorization-handler-allow-keys"]
authorization-handler-maintenance = [
    "splinter/authorization-handler-maintenance",
]
authorization-handler-rbac = [
    "splinter/authorization-handler-rbac",
    "splinter/authorization",
    "splinter-rest-api-actix-web-1/authorization-handler-rbac",
]
biome-credentials = ["splinter/biome-credentials", "splinter-rest-api-common/biome-credentials"]
biome-key-management = ["splinter/biome-key-management", "splinter-rest-api-actix-web-1/biome-key-management"]
biome-profile = ["splinter/biome-profile", "splinter-rest-api-actix-web-1/biome-profile"]
config-allow-keys = ["authorization-handler-allow-keys"]
database-postgres = ["diesel", "diesel/postgres", "scabbard/postgres", "splinter/postgres", "splinter-echo/postgres"]
database-sqlite = ["diesel", "diesel/sqlite", "scabbard/sqlite", "splinter/sqlite", "splinter-echo/sqlite"]
disable-scabbard-autocleanup = []
https-bind = ["splinter/https-bind","splinter-rest-api-actix-web-1/https-bind","splinter-rest-api-common/https-bind"]
lifecycle-executor-interval = []
tap = [
  "splinter/tap",
  "scabbard/metrics",
]
node = [
    "authorization",
    "https-bind",
    "diesel",
    "sawtooth",
    "scabbard/client-reqwest",
    "splinter/admin-service-client",
    "splinter/admin-service-event-client",
    "splinter/admin-service-event-client-actix-web-client",
    "splinter/admin-service-event-subscriber-glob",
    "splinter/client-reqwest",
    "splinter/registry-client",
    "splinter/registry-client-reqwest",
    "splinter/service-message-handler-dispatch",
    "splinter/service-message-sender-factory-peer",
    "splinter/biome-client",
    "splinter/biome-client-reqwest",
]
oauth = [
    "splinter/oauth",
    "splinter-rest-api-common/oauth",
    "splinter-rest-api-actix-web-1/oauth"
]
rest-api-cors = ["splinter/rest-api-cors", "splinter-rest-api-actix-web-1/rest-api-cors"]
scabbardv3 = ["scabbard/scabbardv3", "service2", "scabbard/scabbardv3-consensus",]
service-endpoint = ["splinter-rest-api-actix-web-1/service-endpoint"]
service-timer-interval = []
service2 = [
  "splinter/service-message-handler-dispatch",
  "splinter/service-message-sender-factory-peer",
  "splinter/service-message-sender-factory",
  "splinter/service-timer",
  "splinter/service-lifecycle-executor"
]
service-echo = ["splinter-echo"]
trust-authorization = ["splinter/trust-authorization"]
ws-transport = ["splinter/ws-transport"]

[package.metadata.deb]
maintainer = "The Splinter Team"
depends = "$auto"
assets = [
    ["packaging/man/*.1", "/usr/share/man/man1", "644"],
    ["packaging/registry.yaml.example", "/etc/splinter/registry.yaml.example", "644"],
    ["packaging/splinterd.toml.example", "/etc/splinter/splinterd.toml.example", "644"],
    ["packaging/systemd/splinterd", "/etc/default/splinterd", "644"],
    ["packaging/systemd/splinterd.service", "/lib/systemd/system/splinterd.service", "644"],
    ["target/release/splinterd", "/usr/bin/splinterd", "755"]
]
conf-files = [
    "/etc/default/splinterd",
    "/lib/systemd/system/splinterd.service"
]
maintainer-scripts = "packaging/ubuntu"
extended-description = """\
Splinter is a blockchain-inspired networking platform for distributed \
communications between organizations."""

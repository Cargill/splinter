# Copyright 2018-2022 Cargill Incorporated
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[package]
name = "splinter-rest-api-actix-web-1"
version = "0.7.1"
authors = ["Cargill Incorporated"]
edition = "2021"
license = "Apache-2.0"
description = """\
    Splinter REST API implementation written using Actix Web v1.
"""

[dependencies]
actix = { version = "0.8",  default-features = false }
actix-web-actors = { version = "1", optional = true }
actix-web = { version = "1" }
awc = { version = "0.2", optional = true, default-features = false }
cylinder = { version = "0.2.1", optional = true }
futures = { version = "0.1" }
jsonwebtoken = { version = "7.0", optional = true }
log = { version = "0.4" }
openssl = { version = "0.10", optional = true }
scabbard = { path = "../../services/scabbard/libscabbard", optional = true }
rand = "0.8"
serde = { version = "1", features = ["derive"], optional = true }
serde_json = { version = "1" }
splinter = { path = "../../libsplinter", features = ["rest-api-actix-web-1"] }
splinter-rest-api-common = { path = "../common" }
transact = { version = "0.5", features = ["state-merkle-sql", "family-sabre"], optional = true }
uuid = { version = "0.8", features = ["v4", "v5"] }
protobuf = "2.23"

[dev-dependencies]
diesel = { version = "1", features = ["r2d2", "sqlite"] }
splinter = { path = "../../libsplinter", features = ["admin-service", "rest-api-actix-web-1", "sqlite"] }
reqwest = { version = "0.11", features = ["blocking", "json"] }
url = "1.7.1"
actix-http = { version = "0.2", default-features = false }
tempfile = "3"
oauth2 = { version = "4" }

[features]
default = []

stable = [
    # The stable feature extends default:
    "default",
    # The following features are stable:
    "admin-service",
    "authorization",
    "biome",
    "biome-credentials",
    "biome-key-management",
    "biome-profile",
    "oauth",
    "rbac",
    "registry",
    "rest-api",
    "rest-api-cors",
    "scabbard-service",
    "service",
    "websocket",
]

experimental = [
    # The experimental feature extends stable:
    "stable",
    # The following features are experimental:
]

admin-service = [
    "serde",
    "splinter/admin-service"

]
authorization = ["splinter/authorization","splinter-rest-api-common/authorization"]
authorization-handler-rbac = ["splinter-rest-api-common/authorization-handler-rbac", "authorization"]
biome = ["splinter/biome", "splinter-rest-api-common/biome", "serde"]
biome-credentials = ["biome", "splinter/biome-credentials", "splinter-rest-api-common/biome-credentials", "jsonwebtoken"]
biome-key-management = ["biome", "splinter/biome-key-management"]
biome-profile = ["splinter/biome-profile"]
cylinder-jwt = ["cylinder","splinter-rest-api-common/cylinder-jwt"]
https-bind = ["openssl", "splinter-rest-api-common/https-bind","actix-web/ssl"]
oauth = ["biome", "splinter/oauth","splinter-rest-api-common/oauth"]
rbac = ["splinter/authorization-handler-rbac","splinter-rest-api-common/rbac"]
registry = ["splinter/registry", "splinter-rest-api-common/registry"]
registry-remote = ["splinter/registry-remote","registry"]
rest-api = ["splinter/rest-api"]
rest-api-cors = []
scabbard-service = ["scabbard/splinter-service", "scabbard/rest-api", "transact", "splinter-rest-api-common/scabbard"]
service = ["splinter/runtime-service"]
service-endpoint = ["splinter-rest-api-common/service-endpoint"]
websocket = ["actix-web-actors"]

# Copyright 2018-2022 Cargill Incorporated
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[package]
name = "splinter"
version = "0.7.1"
authors = ["Cargill Incorporated"]
edition = "2018"
license = "Apache-2.0"
readme = "../README.md"
description = """\
    Splinter is a privacy-focused platform for distributed applications that \
    provides a blockchain-inspired networking environment for communication \
    and transactions between organizations.
"""
repository = "https://github.com/cargill/splinter"

[dependencies]
actix-http = { version = "0.2", optional = true, default-features = false }
awc = { version = "0.2", optional = true, default-features = false }
base64 = { version = "0.13", optional = true }
bcrypt = {version = "0.10", optional = true}
byteorder = "1"
chrono = {version = "0.4", optional = true}
crossbeam-channel = "0.5"
cylinder = "0.2.1"
diesel = { version = "1.0", features = ["r2d2", "serde_json"], optional = true }
diesel_migrations = { version = "1.4", optional = true }
futures = { version = "0.1", optional = true }
futures-0-3 = { package = "futures", version = "0.3", optional = true }
glob = { version = "0.3", optional = true }
hyper = { version = "0.12", optional = true }
jsonwebtoken = { version = "7.0", optional = true }
influxdb = { version = "0.5", features = ["derive"], optional = true }
log = "0.4"
metrics = {version = "0.17", features = ["std"], optional = true}
mio = { version = "0.6", default-features = false }
mio-extras = "2"
oauth2 = { version = "4", optional = true }
openssl = "0.10"
percent-encoding = { version = "2.0", optional = true }
protobuf = "2.23"
rand = "0.8"
reqwest = { version = "0.11", optional = true, features = ["blocking", "json"] }
serde = { version = "1.0", features = ["derive"] }
serde_derive = "1.0"
serde_json = "1.0"
serde_yaml = "0.8"
tokio = { version = "0.1.22", optional = true }
tokio-1 = { package = "tokio", version = "1", optional = true, features = ["rt", "sync"] }
tungstenite = { version = "0.10", optional = true }
url = "1.7.1"
uuid = { version = "0.8", features = ["v4", "v5"] }

[dev-dependencies]
reqwest = { version = "0.11", features = ["blocking", "json"] }
tempfile = "3"

[build-dependencies]
protoc-rust = "2.14"
glob = "0.3"

[features]
default = []

stable = [
    "admin-service",
    "authorization",
    "authorization-handler-allow-keys",
    "authorization-handler-rbac",
    "biome",
    "biome-credentials",
    "biome-key-management",
    "biome-profile",
    "circuit-template",
    "challenge-authorization",
    "cylinder-jwt",
    "default",
    "events",
    "memory",
    "node-id-store",
    "oauth",
    "postgres",
    "registry",
    "registry-remote",
    "rest-api",
    "rest-api-actix-web-1",
    "rest-api-cors",
    "runtime-service",
    "service",
    "sqlite",
    "store",
    "store-factory",
    "tap",
    "trust-authorization",
]

experimental = [
    # The experimental feature extends stable:
    "stable",
    # The following features are experimental:
    "admin-service-client",
    "admin-service-event-client",
    "admin-service-event-client-actix-web-client",
    "admin-service-event-subscriber-glob",
    "authorization-handler-maintenance",
    "biome-client",
    "biome-client-reqwest",
    "client-reqwest",
    "deferred-send",
    "https-bind",
    "registry-client",
    "registry-client-reqwest",
    "service-arguments-converter",
    "service-lifecycle",
    "service-lifecycle-executor",
    "service-lifecycle-store",
    "service-message-handler",
    "service-message-handler-dispatch",
    "service-message-handler-factory",
    "service-message-sender-factory",
    "service-message-sender-factory-peer",
    "service-timer",
    "service-timer-alarm",
    "service-timer-alarm-factory",
    "service-timer-filter",
    "service-timer-handler",
    "service-timer-handler-factory",
    "ws-transport",
]

# used for turning benchmark tests on
benchmark = []

admin-service = ["store", "runtime-service"]
admin-service-client = ["admin-service"]
admin-service-event-client = ["admin-service-client"]
admin-service-event-client-actix-web-client = [
    "admin-service-event-client",
    "events",
    "rest-api",
]
admin-service-event-subscriber-glob = ["admin-service"]
authorization-handler-allow-keys = ["authorization"]
authorization-handler-maintenance = ["authorization"]
authorization = ["rest-api-actix-web-1"]
authorization-handler-rbac = ["store"]
biome = []
biome-client = ["biome"]
biome-client-reqwest = ["biome", "reqwest"]
biome-credentials = ["bcrypt", "biome", "store"]
biome-key-management = ["biome", "store"]
biome-profile = ["biome", "store"]
challenge-authorization = []
circuit-template = ["admin-service", "glob"]
client-reqwest = ["reqwest"]
cylinder-jwt = ["cylinder/jwt", "rest-api"]
deferred-send = []
events = ["actix-http", "futures", "hyper", "tokio", "awc"]
https-bind = []
memory = ["sqlite"]
node-id-store = ["store"]
oauth = ["biome", "base64", "oauth2", "reqwest", "rest-api", "store"]
postgres = ["diesel/postgres", "diesel_migrations"]
registry = ["store"]
registry-client = ["registry"]
registry-client-reqwest = ["registry-client", "reqwest", "rest-api"]
registry-remote = ["reqwest", "registry"]
rest-api = ["jsonwebtoken", "percent-encoding"]
rest-api-actix-web-1 = [
    "actix-http",
    "futures",
    "rest-api",
]
rest-api-cors = []
runtime-service = ["service"]
service = []
service-arguments-converter = ["service"]
service-lifecycle = ["service", "service-arguments-converter", "store"]
service-lifecycle-executor = ["runtime-service", "service-lifecycle", "service-lifecycle-store"]
service-lifecycle-store = ["service", "service-lifecycle"]
service-message-handler = ["service"]
service-message-handler-factory = ["service", "service-message-handler"]
service-message-sender-factory = ["service"]
service-message-sender-factory-peer = ["service-message-sender-factory"]
service-timer =[
  "deferred-send",
  "runtime-service",
  "service-message-sender-factory",
  "service-timer-alarm-factory",
  "service-timer-filter",
  "service-timer-handler",
  "service-timer-handler-factory"
]
service-timer-alarm = []
service-timer-alarm-factory = ["service-timer-alarm"]
service-timer-filter = ["service"]
service-timer-handler = ["service"]
service-message-handler-dispatch = [
    "runtime-service",
    "service-message-handler",
    "service-message-handler-factory",
    "service-message-sender-factory",
]
service-timer-handler-factory = ["service", "service-timer-handler"]
sqlite = ["diesel/sqlite", "diesel_migrations"]
store = []
store-factory = ["store"]
tap = ["chrono", "futures-0-3", "influxdb", "metrics", "tokio-1"]
trust-authorization = []
ws-transport = ["tungstenite"]

[package.metadata.docs.rs]
features = [
    "stable",
    "experimental"
  ]

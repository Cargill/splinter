# Copyright 2019 Cargill Incorporated
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: "2.2"

volumes:
  splinter-shared:

services:
  generate-shared:
      image: splinter-cli
      build:
        context: .
        dockerfile: cli/Dockerfile-installed-${DISTRO}
        args:
          - REPO_VERSION=${REPO_VERSION}
      volumes:
        - splinter-shared:/splinter_shared
      command: |
        bash -c "
          if [ ! -f /splinter_shared/private/server.key ]
          then
            splinter cert generate \
              -d  /splinter_shared/ \
              --force
          fi
        "

  splinterd-node-0:
    image: splinterd-node
    expose:
      - 8080
      - 8043
      - 8945
    ports:
      - 8080:8080
    volumes:
      - ./splinterd/sample_configs:/configs
      - ./splinterd/sample_node_registries:/node_registries
      - splinter-shared:/splinter_shared
    build:
      context: .
      dockerfile: splinterd/Dockerfile-installed-${DISTRO}
      args:
        - REPO_VERSION=${REPO_VERSION}
    entrypoint: |
      bash -c "
        # We need to wait for the generated certificates and keys to be
        # available
        while [ ! -f /splinter_shared/private/server.key ]; do \
          echo 'waiting for certs and keys'; \
          sleep 1; \
        done && \
        # Copy the generated keys and certificates to its expected location
        cp -a /splinter_shared/. /etc/splinter/certs && \
        splinterd \
            -c ./configs/splinterd-node-0-docker.toml \
            --registry-file ./node_registries/nodes.yaml \
            --insecure \
            -vv
      "

  openapi-client:
      image: openapi-client
      container_name: openapi-client
      expose:
        - 80
      ports:
        - 9000:80
      build:
        context: .
        dockerfile: splinterd/api/openapi.dockerfile

  splinter-db:
    image: postgres
    container_name: splinter-db
    restart: always
    expose:
      - 5432
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: splinter_admin
      POSTGRES_PASSWORD: splinter_test
      POSTGRES_DB: splinter

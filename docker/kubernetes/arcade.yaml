# Copyright 2018-2021 Cargill Incorporated
#
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an AS IS BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: v1
kind: List

items:

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: acme
    namespace: default
  spec:
    selector:
      matchLabels:
        app: acme
    replicas: 1
    template:
      metadata:
        labels:
          app: acme
      spec:
        containers:
          - name: db
            image: splintercommunity/gameroom-database:latest
            env:
              - name: POSTGRES_USER
                value: gameroom
              - name: POSTGRES_PASSWORD
                value: gameroom_example
              - name: POSTGRES_DB
                value: gameroom
              - name: PGDATA
                value: /var/lib/postgresql/data/pgdata
            ports:
              - name: db
                containerPort: 5432


          - name: gameroom-app
            image: splintercommunity/gameroom-app-acme:latest
            env:
              - name: VUE_APP_BRAND
                value: acme
            command:
              - bash
            args:
              - -c
              - |
                sed -i'' "s/gameroomd-\${VUE_APP_BRAND}/${HOSTNAME}/g" /usr/local/apache2/conf/httpd.conf &&
                httpd-foreground
            ports:
              - name: gameroom
                containerPort: 80


          - name: gameroomd
            image: splintercommunity/gameroomd:latest
            command:
              - bash
            args:
              - -c
              -  |
                  until PGPASSWORD=gameroom_example psql -h $HOSTNAME -U gameroom -c '\q'; do
                      >&2 echo 'Database is unavailable - sleeping'
                      sleep 1
                  done &&
                  while [[ $(curl --write-out %{http_code} --silent --output /dev/null http://$HOSTNAME:8085/status) -ne 200 ]] ; do
                    >&2 echo 'splinterd is unavailable - sleeping'
                    sleep 1
                  done &&
                  gameroom -vv database migrate --database-url postgres://gameroom:gameroom_example@$HOSTNAME:5432/gameroom &&
                  gameroomd -vv --database-url postgres://gameroom:gameroom_example@$HOSTNAME:5432/gameroom \
                    -b $HOSTNAME:8000 --splinterd-url http://$HOSTNAME:8085
            ports:
              - name: gameroomd
                containerPort: 8000

          - name: splinter-cli
            image: splintercommunity/splinter-cli:latest
            env:
            command:
              - bash
            args:
              - -c
              - |
                  splinter cert generate \
                  --common-name acme \
                  --cert-dir /config/certs/ \
                  --force \
                  && tail -f /dev/null

            volumeMounts:
              - name: certificate-volume
                mountPath: /config/certs/

          - name: splinterd
            image: splintercommunity/splinterd:latest
            command:
              - bash
            args:
              - -c
              - |
                if [ ! -f /etc/splinter/certs/private/server.key ]; then
                  while [ ! -f /config/certs/private/server.key ]; do
                    echo 'Waiting for certificates and keys';
                    sleep 1;
                  done
                  cp -R /config/certs/ /etc/splinter/
                fi && \
                splinterd -vv \
                --registries file:///config/registry/registry.yaml \
                --rest-api-endpoint $HOSTNAME:8085 \
                --network-endpoints tcps://$HOSTNAME:8044 \
                --node-id acme \
                --service-endpoint tcp://$HOSTNAME:8043 \
                --storage yaml \
                --tls-insecure
            volumeMounts:
              - name: registry-volume
                mountPath: /config/registry
              - name: certificate-volume
                mountPath: /config/certs
            ports:
              - name: splinterd
                containerPort: 8044

        volumes:
        - name: registry-volume
          configMap:
            name: registry
        - name: certificate-volume
          emptyDir: {}


- apiVersion: v1
  kind: Service
  metadata:
    name: acme
  spec:
    type: NodePort
    selector:
      app: acme
    ports:
      - name: "8044"
        protocol: TCP
        port: 8044
        targetPort: 8044

- apiVersion: v1
  kind: Service
  metadata:
    name: acme-http
  spec:
    type: NodePort
    selector:
      app: acme
    ports:
      - name: "http"
        protocol: TCP
        port: 80
        targetPort: 80

# --------------------------------

---
apiVersion: v1
kind: List

items:

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: bubba
    namespace: default
  spec:
    selector:
      matchLabels:
        app: bubba
    replicas: 1
    template:
      metadata:
        labels:
          app: bubba
      spec:
        containers:
          - name: db
            image: splintercommunity/gameroom-database:latest
            env:
              - name: POSTGRES_USER
                value: gameroom
              - name: POSTGRES_PASSWORD
                value: gameroom_example
              - name: POSTGRES_DB
                value: gameroom
              - name: PGDATA
                value: /var/lib/postgresql/data/pgdata
            ports:
              - name: db
                containerPort: 5432


          - name: gameroom-app
            image: splintercommunity/gameroom-app-bubba:latest
            env:
              - name: VUE_APP_BRAND
                value: bubba
            command:
              - bash
            args:
              - -c
              - |
                sed -i'' "s/gameroomd-\${VUE_APP_BRAND}/${HOSTNAME}/g" /usr/local/apache2/conf/httpd.conf &&
                httpd-foreground
            ports:
              - name: gameroom
                containerPort: 80


          - name: gameroomd
            image: splintercommunity/gameroomd:latest
            command:
              - bash
            args:
              - -c
              -  |
                  until PGPASSWORD=gameroom_example psql -h $HOSTNAME -U gameroom -c '\q'; do
                      >&2 echo 'Database is unavailable - sleeping'
                      sleep 1
                  done &&
                  while [[ $(curl --write-out %{http_code} --silent --output /dev/null http://$HOSTNAME:8085/status) -ne 200 ]] ; do
                    >&2 echo 'splinterd is unavailable - sleeping'
                    sleep 1
                  done &&
                  gameroom -vv database migrate --database-url postgres://gameroom:gameroom_example@$HOSTNAME:5432/gameroom &&
                  gameroomd -vv --database-url postgres://gameroom:gameroom_example@$HOSTNAME:5432/gameroom \
                    -b $HOSTNAME:8000 --splinterd-url http://$HOSTNAME:8085
            ports:
              - name: gameroomd
                containerPort: 8000

          - name: splinter-cli
            image: splintercommunity/splinter-cli:latest
            env:
            command:
              - bash
            args:
              - -c
              - |
                  splinter cert generate \
                  --common-name bubba \
                  --cert-dir /config/certs/ \
                  --force \
                  && tail -f /dev/null

            volumeMounts:
              - name: certificate-volume
                mountPath: /config/certs/

          - name: splinterd
            image: splintercommunity/splinterd:latest
            command:
              - bash
            args:
              - -c
              - |
                if [ ! -f /etc/splinter/certs/private/server.key ]; then
                  while [ ! -f /config/certs/private/server.key ]; do
                    echo 'Waiting for certificates and keys';
                    sleep 1;
                  done
                  cp -R /config/certs/ /etc/splinter/
                fi && \
                splinterd -vv \
                --registries file:///config/registry/registry.yaml \
                --rest-api-endpoint $HOSTNAME:8085 \
                --network-endpoints tcps://$HOSTNAME:8044 \
                --node-id bubba \
                --service-endpoint tcp://$HOSTNAME:8043 \
                --storage yaml \
                --tls-insecure
            volumeMounts:
              - name: registry-volume
                mountPath: /config/registry
              - name: certificate-volume
                mountPath: /config/certs
            ports:
              - name: splinterd
                containerPort: 8044

        volumes:
        - name: registry-volume
          configMap:
            name: registry
        - name: certificate-volume
          emptyDir: {}


- apiVersion: v1
  kind: Service
  metadata:
    name: bubba
  spec:
    type: NodePort
    selector:
      app: bubba
    ports:
      - name: "8044"
        protocol: TCP
        port: 8044
        targetPort: 8044

- apiVersion: v1
  kind: Service
  metadata:
    name: bubba-http
  spec:
    type: NodePort
    selector:
      app: bubba
    ports:
      - name: "http"
        protocol: TCP
        port: 80
        targetPort: 80

# Copyright 2018-2021 Cargill Incorporated
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

openapi: '3.0.0'

info:
  version: 0.3.12
  title: Gameroomd API
  description: REST API for Gameroomd

servers:
  - url: http://localhost:8000

paths:
  /nodes:
    get:
      tags:
          - Node Registry
      description: List nodes in the Node Registry
      parameters:
        - name: offset
          in: query
          description: paging offset
          required: false
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: maximum number of items to return (max 100)
          required: false
          schema:
            type: integer
            default: 100
        - name: filter
          in: query
          description: |
            url-encodeded stringified JSON containing property filters on the
            node's metadata properties in the format
              {METADATA_PROPERTY:[{"operator":OPERATOR,"value":VALUE}]}
          required: false
          schema:
            type: string
          example: "%7B%22company%22%3A%5B%22%3D%22%2C%22Cargill%22%5D%7D"
      responses:
        200:
          description: list of nodes
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Node'
                  paging:
                    $ref: '#/components/schemas/Paging'
        400:
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /nodes/{identity}:
      get:
        tags:
          - Node Registry
        description: Fetch a node in the Node Registry by their identity
        parameters:
          - name: identity
            in: path
            description: identity of node to fetch
            required: true
            schema:
              type: string
        responses:
          200:
            description: Node
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/Node"
          404:
            description: The node with {identity} was not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /users:
      post:
        tags:
          - Users
        description: Create new Gameroom User entry in database
        requestBody:
          content:
            application/json:
              schema:
                properties:
                  email:
                    description: Email of a new user
                  hashed_password:
                    description: |
                      Hashed password to be used for user authentication.
                      This password should be hashed by the client, which will be
                      hashed again before storing in the database.
                  public_key:
                    description: User's public key related to their identity
                  encrypted_private_key:
                    description: |
                      The participant's encrypted private key. This private key
                      should be generated by the client, encrypted using the
                      participant's raw password, and encoded as a hex string.
                required:
                  - username
                  - hashed_password
                  - public_key
                  - encrypted_private_key
                example:
                  email: Anne@AcmeCorp.com
                  hashed_password: |
                    8945622435187243046536949706b5272644c71336c7254563679727565494b376d4b3554696b734662685962652f6v52562e437a70462f6552489c8b
                  encrypted_private_key: |
                    90463c75738163694f694a49557a49314e694973496d5634634349364d5455794f9853404d6a41344d43776961574630496a6f784e5449344e7a4d344e44677766512e65794a7764574a7361574e6661325635496a6f694d444a6d4d7a49304d4755775a4467334e324930596d4d334d6a67784d4745794e7a41344e7a4133596d4933596d51354f546b795a5468685a4467774e47526c4d5451774d7a4a6d4e6d4933597a63794e6d5a69597a5931496e302e6c65415a6c6175542d7178742d346c64682d6d3145755a7465596b425845456173557142417353795f5a4d
                  public_key: 395acb89a89835ffd4ecaf92baeb83b74eea6e5ade10a5c570debfd12a772baa87
        responses:
          200:
            description: Successful operation
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AuthResponseData'
          400:
            description: Invalid request was made
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Internal server error occurred
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /users/authenticate:
      post:
        tags:
          - Users
        description: Authenticate a Gameroom User
        requestBody:
          content:
            application/json:
              schema:
                properties:
                  eamil:
                    description: Email of a new user
                  hashed_password:
                    description: |
                      Hashed password to be used for user authentication.
                      This password should be hashed by the client, which will be
                      hashed again before storing in the database.
                required:
                  - username
                  - hashed_password
                example:
                  email: Anne@AcmeCorp.com
                  hashed_password: |
                    8945622435187243046536949706b5272644c71336c7254563679727565494b376d4b3554696b734662685962652f6v52562e437a70462f6552489c8b
        responses:
          200:
            description: Successful operation
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AuthResponseData'
          401:
            description: Unauthorized request
            content:
              application/json:
                  schema:
                    $ref: '#/components/schemas/Error'
          500:
            description: Internal server error occurred
            content:
              application/json:
                  schema:
                    $ref: '#/components/schemas/Error'



  /gamerooms/propose:
      post:
        tags:
          - Gamerooms
        description: Propose a new gameroom
        requestBody:
          content:
            application/json:
              schema:
                properties:
                  alias:
                    description: Name of new gameroom
                    example: my_gameroom
                  members:
                    description: List of node ids that will be part of the circuit, not including own node.
                    type: array
                    items:
                      type: string
                      example: acme-node-000
                required:
                  - alias
                  - member

        responses:
          200:
            description: A serialized circuit management payload
            content:
              application/octet-stream:
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/BinaryData'
          400:
            description: Gameroom proposal request is invalid
            content:
              application/json:
                  schema:
                    $ref: '#/components/schemas/Error'
          500:
            description: Internal server error occurred
            content:
              application/json:
                  schema:
                    $ref: '#/components/schemas/Error'

  /proposals:
    get:
      tags:
          - Proposals
      description: List Circuit Proposals
      parameters:
      - name: offset
        in: query
        description: paging offset
        required: false
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: maximum number of items to return (max 100)
        required: false
        schema:
          type: integer
          default: 100
      responses:
        200:
          description: list of circuit proposals
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApiCircuitProposal'
                  paging:
                    $ref: '#/components/schemas/Paging'
        500:
          description: Internal server error occurred
          content:
              application/json:
                  schema:
                    $ref: '#/components/schemas/Error'

  /proposals/{proposal_id}:
    get:
      tags:
          - Proposals
      description: Fetch a circuit proposal by the proposal id
      parameters:
        - name: proposal_id
          in: path
          description: identity of the proposal to fetch
          required: true
          schema:
            type: string
      responses:
        200:
          description: Circuit proposal
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ApiCircuitProposal'
        404:
          description: The proposal with {proposal_id} was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error occurred
        503:
          description: Server unavailable

  /proposals/{proposal_id}/vote:
      post:
        tags:
          - Proposals
        description: Vote on a proposal
        parameters:
          - name: proposal_id
            in: path
            description: identity of the proposal to vote on
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/Vote'

        responses:
          200:
            description: A serialized circuit management payload
            content:
              application/octet-stream:
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/BinaryData'
          500:
            description: Internal server error occurred
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /submit:
      post:
        tags:
          - Splinter
        description: Submit signed serialized payload to Splinter daemon
        requestBody:
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary

        responses:
          202:
            description:  The payload was accepted
            content:
              application/json:
                schema:
                  properties:
                    data:
                      type: string
                      example: "The payload was submitted successfully"
          400:
            description: Request was malformed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Internal server error


  /notifications:
    get:
      tags:
        - Notifications
      description: List Gameroom notifications
      parameters:
      - name: offset
        in: query
        description: paging offset
        required: false
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: maximum number of items to return (max 100)
        required: false
        schema:
          type: integer
          default: 100
      responses:
        200:
          description: list of Gameroom notifications
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApiNotification'
                  paging:
                    $ref: '#/components/schemas/Paging'
        500:
          description: Internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        503:
          description: Server unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /notifications/{notification_id}:
    get:
      tags:
        - Notifications
      description: Fetch Gameroom notification by notification id
      parameters:
      - name: notification_id
        in: path
        description: identity of the notification to fetch
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Gameroom Notification
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ApiNotification'
        404:
          description: The notification with {notification_id} was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        503:
          description: Server unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /notifications/{notification_id}/read:
    patch:
      tags:
        - Notifications
      description: Indicate the Gameroom notification has been viewed by a client's user
      parameters:
      - name: notification_id
        in: path
        description: identity of the notification to update
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Gameroom Notification
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ApiNotification'
        404:
          description: The notification with {notification_id} was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        503:
          description: Server unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /gamerooms:
    get:
      tags:
        - Gamerooms
      description: List Gamerooms created from accepted gameroom proposals
      parameters:
        - name: status
          in: query
          description: status of gamerooms to list
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: paging offset
          required: false
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: maximum number of items to return (max 100)
          required: false
          schema:
            type: integer
            default: 100
      responses:
        200:
          description: list of Gamerooms
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApiGameroom'
                  paging:
                    $ref: '#/components/schemas/Paging'
        500:
          description: Internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        503:
          description: Server unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /gamerooms/{circuit_id}:
    get:
      tags:
        - Gamerooms
      description: Fetch a Gameroom by the circuit id
      parameters:
        - name: circuit_id
          in: path
          description: identity of the Gameroom circuit to fetch
          required: true
          schema:
            type: string
      responses:
        200:
          description: Gameroom
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ApiGameroom'
        404:
          description: The Gameroom with {circuit_id} was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        503:
          description: Server unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /gamerooms/{circuit_id}/batches:
    post:
      tags:
        - Gamerooms
      description: Submit signed serialized Sabre payload to Gameroom service
      parameters:
        - name: circuit_id
          in: path
          description: identity of the Gameroom circuit
          required: true
          schema:
            type: string
        - name: wait
          in: query
          description: Time gameroomd should wait for the batch to be processed. If set to "false" gameroomd will not wait.
          required: false
          schema:
            type: integer
            default: 30
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
          200:
            description:  A list with the batch statuses of the submitted batches.
            content:
              application/json:
                schema:
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/BatchStatus'
          202:
            description:  Returned if any of the batches are still pending after timeout or if wait is set to false. Response includes a list with the batch statuses of the submitted batches.
            content:
              application/json:
                schema:
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/BatchStatus'
          400:
            description: Request was malformed
            content:
              application/json:
                schema:
                  allOf:
                    - $ref: '#/components/schemas/Error'
                    - type: object
                      properties:
                          data:
                            description: List of BatchStatus
                            type: array
                            items:
                              $ref: '#/components/schemas/BatchStatus'


          500:
            description: Internal server error

  /ws/subscribe:
    get:
      tags:
        - Gameroom Websocket
      description: Connect to the gameroomd websocket to receive messages
      responses:
        200:
          description: Registration request was successfully submitted
          content:
            application/json:
              schema:
                type: object
                properties:
                  namespace:
                    type: string
                    example: notifications
                  action:
                    type: string
                    example: listNotifications
        400:
          description: The request to connect to the websocket was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        503:
          description: Server unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /xo/{circuit_id}/games:
    get:
      tags:
        - XO Games
      description: List all XO games within the specified circuit
      parameters:
        - name: circuit_id
          in: path
          description: Circuit id of the XO games to list
          required: true
          schema:
            type: string
      responses:
        200:
          description: list of XO games
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApiXoGame'
                  paging:
                    $ref: '#/components/schemas/Paging'
        500:
          description: Internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        503:
          description: Server unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /xo/{circuit_id}/games/{game_name}:
    get:
      tags:
        - XO Games
      description: Fetch the XO game within the specified circuit and with the specified game name
      parameters:
        - name: circuit_id
          in: path
          description: Circuit id of the XO games to fetch
          required: true
          schema:
            type: string
        - name: game_name
          in: path
          description: Name of the XO game to fetch
          required: true
          schema:
            type: string
      responses:
        200:
          description: XO game
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ApiXoGame'
        404:
          description: The XO game with {circuit_id} and {game_name} was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        503:
          description: Server unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /keys/{public_key}:
    get:
      tags:
        - Splinter Key Registry
      description: Fetch information in the Key Registry by public key
      parameters:
        - name: public_key
          in: path
          description: public key to query, in hex
          required: true
          schema:
            type: string
      responses:
        200:
          description: Public Key Info
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/PublicKeyInfo"
        400:
          description: The public key was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Information for the public key was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        503:
          description: Server unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      additionalProperties: false
      properties:
        code:
          description: The HTTP error code
          type: string
          example: 404
        message:
          description: A message describing the error that occurred
          type: string
          example: Resource not found
      required:
        - message


    ApiCircuitProposal:
      type: object
      properties:
        proposal_id:
          type: string
        circuit_id:
          type: string
        circuit_hash:
          type: string
        members:
          type: array
          items:
            $ref: '#/components/schemas/ApiCircuitMember'
        requester:
          type: string
        created_time:
          description: time in seconds since the unix epoch the proposal was created
          type: integer
        updated_time:
          description: time in seconds since the unix epoch the proposal was updated
          type: integer


    ApiCircuitMember:
      type: object
      properties:
        node_id:
          type: string
          example: acme-node-000
        endpoint:
          type: string
          example: tls://127.0.0.1:8080

    ApiGameroom:
      type: object
      properties:
        circuit_id:
          type: string
          example: gameroom::acme-node-000::bubba-node-000::11bf5b37-e0b8-42e0-8dcf-dc8c4aefc000
        authorization_type:
          type: string
          example: Trust
        persistence:
          type: string
          example: Any
        routes:
          type: string
          example: Any
        circuit_management_type:
          type: string
          example: Gameroom
        members:
          type: array
          items:
            $ref: '#/components/schemas/ApiCircuitMember'
        alias:
          description: alias of the gameroom
          type: string
          example: Acme-Bubba-Gameroom
        status:
          description: status of the gameroom
          type: string
          example: 'ACCEPTED'

    AuthResponseData:
      type: object
      properties:
        email:
          type: string
        public_key:
          type: string
        encrypted_private_key:
          type: string

    Node:
      type: object
      properties:
        identity:
          type: string
        endpoint:
          type: string
        display_name:
          type: string
        metadata:
          type: object
      example:
        identity: node-123123-asdf
        endpoint: tls://12.0.0.123:8431
        display_name: Cargill - Node 1
        metadata:
          company: Cargill
          status: Up

    Paging:
      type: object
      properties:
        current:
          type: string
        offset:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        first:
          type: string
        prev:
          type: string
        next:
          type: string
        last:
          type: string
      example:
        current: /nodes?offset=10&limit=10
        offset: 10
        limit: 10
        total: 50
        first: /nodes?offset=0&limit=10
        prev: /nodes?offset=0&limit=10
        next: /nodes?offset=20&limit=10
        last: /nodes?offset=40&limit=10

    Vote:
      type: object
      properties:
        circuit_id:
          type: string
          example: circuit-000
        circuit_hash:
          type: string
          example: d2b1abbd57e8cd2bfcf3f4259b9785a723e19b4bb4d5cc0206e860890c403dc4
        vote:
          type: string
          enum:
            - Accept
            - Reject

    ApiNotification:
      type: object
      properties:
        id:
          type: integer
        notification_type:
          type: string
        org:
          type: string
        requester:
          description: public key of user who that submitted the request
          type: string
        target:
          type: string
        timestamp:
          description: time in seconds since the unix epoch the notification was created
          type: integer
        read:
          description: states whether the notification has been returned to the client
          type: boolean
          default: false

    BinaryData:
      type: object
      properties:
        payload_bytes:
          type: string
          format: binary

    ApiXoGame:
      type: object
      properties:
        circuit_id:
          type: string
        game_name:
          type: string
        player_1:
          type: string
        player_2:
          type: string
        game_status:
          type: string
        game_board:
          description: string representation of game board, using comma-separated values format
          type: string
        created_time:
          description: time in seconds since the unix epoch the XO game was created
          type: integer
        updated_time:
          description: time in seconds since the unix epoch the XO game was updated
          type: integer

    PublicKeyInfo:
      type: object
      properties:
        public_key:
          type: string
        node_id:
          type: string
        metadata:
          type: object
          additionalProperties: true
          example:
            name: Jane User
            organization: Acme Corporation

    BatchStatus:
          type: object
          properties:
            id:
              type: string
              description: Batch header signature
              example: 6ff35474a572087e08fd6a54d563bd8172951b363e5c9731f1a40a855e14bba45dac515364a08d8403f4fb5d4a206174b7f63c29e4f4e425dc71b95494b8a798
            status:
              type: object
              description: Batch status
              properties:
                statusType:
                  type: string
                  enum:
                    - Unknown
                    - Invalid
                    - Valid
                    - Pending
                    - Committed
                message:
                    type: array
                    items:
                      type: object
                      properties:
                        transaction_id:
                          type: string
                          example: f4e147ff464013deccb3e68bb8619beffb29ff86b401257c93bcf8ef76d7ca173fa84b4f4a58414ad2d00a2c9f810cbb726e01cd26ebd44720239d9d35853099
                        error_message:
                          type: string
                          example: "Wasm contract returned invalid transaction: xo, 0.3.3"
                        error_data:
                          type: array
                          items:
                            type: integer
